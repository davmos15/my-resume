<h1 class="page-title">Resume Sections</h1>

<div class="card">
    <div style="margin-bottom: 20px;">
        <div class="dropdown" style="position: relative; display: inline-block;">
            <button class="btn btn-success dropdown-toggle" onclick="toggleDropdown()">
                Add New ▼
            </button>
            <div class="dropdown-menu" id="addDropdown" style="display: none;">
                <a href="/admin/resume/new?type=experience" class="dropdown-item">Experience</a>
                <a href="/admin/resume/new?type=skills" class="dropdown-item">Skills & Tools</a>
                <a href="/admin/resume/new?type=courses" class="dropdown-item">Courses & Achievements</a>
                <a href="/admin/resume/new?type=education" class="dropdown-item">Education</a>
            </div>
        </div>
    </div>

    <% const sectionTypes = ['experience', 'skills', 'courses', 'education']; %>
    <% sectionTypes.forEach(type => { %>
        <% const typeSections = sections.filter(s => s.section_type === type); %>
        <% if (typeSections.length > 0 || type) { %>
            <h3 style="margin-top: 30px; margin-bottom: 15px; text-transform: capitalize;">
                <%= type === 'courses' ? 'Courses & Achievements' : type %>
            </h3>
            
            <% if (typeSections.length > 0) { %>
                <div class="sortable-table" data-type="<%= type %>">
                    <table class="table">
                        <thead>
                            <tr>
                                <th width="30px">⋮⋮</th>
                                <th>Title</th>
                                <th>Company</th>
                                <th>Date Range</th>
                                <th>Status</th>
                                <th>Order</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="sortable-<%= type %>">
                            <% typeSections.forEach(section => { %>
                                <tr data-id="<%= section.id %>" class="sortable-row">
                                    <td class="drag-handle" style="cursor: move;">⋮⋮</td>
                                    <td><%= section.title %></td>
                                    <td><%= section.subtitle || '-' %></td>
                                    <td><%= section.date_range || '-' %></td>
                                    <td>
                                        <span class="<%= section.is_active ? 'status-active' : 'status-inactive' %>">
                                            <%= section.is_active ? 'Active' : 'Inactive' %>
                                        </span>
                                    </td>
                                    <td><%= section.display_order %></td>
                                    <td>
                                        <div class="actions">
                                            <a href="/admin/resume/edit/<%= section.id %>" class="btn btn-primary btn-sm">Edit</a>
                                            <a href="/admin/resume/delete/<%= section.id %>" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure?')">Delete</a>
                                        </div>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
            <% } else { %>
                <p style="color: #666; padding: 20px 0;">No <%= type %> entries yet.</p>
            <% } %>
        <% } %>
    <% }); %>
</div>

<style>
.dropdown {
    position: relative;
}

.dropdown-toggle::after {
    display: none;
}

.dropdown-menu {
    position: absolute;
    top: 100%;
    left: 0;
    z-index: 1000;
    min-width: 160px;
    padding: 5px 0;
    margin: 2px 0 0;
    background-color: #fff;
    border: 1px solid rgba(0,0,0,.15);
    border-radius: 4px;
    box-shadow: 0 6px 12px rgba(0,0,0,.175);
}

.dropdown-item {
    display: block;
    width: 100%;
    padding: 8px 16px;
    clear: both;
    font-weight: 400;
    line-height: 1.5;
    color: #333;
    text-decoration: none;
    white-space: nowrap;
}

.dropdown-item:hover {
    color: #262626;
    text-decoration: none;
    background-color: #f5f5f5;
}

.sortable-row {
    cursor: move;
}

.sortable-row:hover {
    background-color: #f8f9fa;
}

.drag-handle {
    color: #999;
    user-select: none;
}

.sortable-ghost {
    opacity: 0.4;
}

.sortable-chosen {
    background-color: #e3f2fd !important;
}

.status-active {
    color: #27ae60;
}

.status-inactive {
    color: #e74c3c;
}
</style>

<script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"></script>
<script>
function toggleDropdown() {
    const dropdown = document.getElementById('addDropdown');
    dropdown.style.display = dropdown.style.display === 'none' ? 'block' : 'none';
}

// Close dropdown when clicking outside
document.addEventListener('click', function(event) {
    if (!event.target.closest('.dropdown')) {
        document.getElementById('addDropdown').style.display = 'none';
    }
});

// Initialize sortable for each section type
document.addEventListener('DOMContentLoaded', function() {
    const sectionTypes = ['experience', 'skills', 'courses', 'education'];
    
    sectionTypes.forEach(type => {
        const element = document.getElementById(`sortable-${type}`);
        if (element) {
            new Sortable(element, {
                handle: '.drag-handle',
                animation: 150,
                ghostClass: 'sortable-ghost',
                chosenClass: 'sortable-chosen',
                onEnd: function(evt) {
                    updateOrder(type, evt.to);
                }
            });
        }
    });
});

async function updateOrder(sectionType, container) {
    const rows = container.querySelectorAll('tr[data-id]');
    const updates = Array.from(rows).map((row, index) => ({
        id: row.dataset.id,
        display_order: index
    }));

    try {
        const response = await fetch('/admin/resume/reorder', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ updates })
        });

        if (!response.ok) {
            throw new Error('Failed to update order');
        }

        // Update the display order in the UI
        rows.forEach((row, index) => {
            const orderCell = row.querySelector('td:nth-child(6)');
            if (orderCell) {
                orderCell.textContent = index;
            }
        });

    } catch (error) {
        console.error('Error updating order:', error);
        alert('Failed to update order. Please refresh the page.');
    }
}
</script>