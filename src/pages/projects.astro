---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

// For now, we'll read the markdown files manually since we're transitioning
import fs from 'fs';
import path from 'path';
import matter from 'gray-matter';

// Read project markdown files
const projectsDir = path.join(process.cwd(), 'src/content/projects');
let projects = [];

try {
  // Check if directory exists
  if (fs.existsSync(projectsDir)) {
    const files = fs.readdirSync(projectsDir).filter(file => file.endsWith('.md'));
    
    projects = files.map(file => {
      const content = fs.readFileSync(path.join(projectsDir, file), 'utf8');
      const { data } = matter(content);
      const slug = file.replace('.md', '');
      return {
        ...data,
        slug,
        url: `/project/${slug}`
      };
    }).sort((a, b) => {
      // Sort by featured first, then by order
      if (a.featured && !b.featured) return -1;
      if (!a.featured && b.featured) return 1;
      return (a.order || 999) - (b.order || 999);
    });
  }
} catch (error) {
  console.error('Error loading projects:', error);
}

// For fallback, also try to load from database
import { allAsync } from '../lib/db.js';
let dbProjects = [];
try {
  dbProjects = await allAsync('SELECT * FROM projects WHERE is_active = true ORDER BY display_order, id DESC');
} catch (err) {
  console.error('Error fetching projects from DB:', err);
}

// Use markdown projects if available, otherwise use database
const displayProjects = projects.length > 0 ? projects : dbProjects;
---

<BaseLayout title="Projects - Nadav Moskow">
  <style>
    #projects-page {
      max-width: 1200px;
      margin: 0 auto;
      padding: 40px 20px;
    }

    .page-header {
      text-align: center;
      margin-bottom: 50px;
    }

    .page-header h1 {
      font-size: 2.5em;
      margin-bottom: 10px;
      color: var(--text-primary);
      font-weight: 700;
    }

    .page-subtitle {
      font-size: 1.1em;
      opacity: 0.7;
      color: var(--text-secondary);
    }

    /* Filter Tags */
    .filter-tags {
      display: flex;
      justify-content: center;
      flex-wrap: wrap;
      gap: 10px;
      margin-bottom: 40px;
    }

    .filter-tag {
      padding: 8px 16px;
      background: var(--bg-secondary);
      border: 1px solid var(--border-color);
      border-radius: 20px;
      color: var(--text-primary);
      cursor: pointer;
      transition: all 0.3s ease;
      font-size: 0.9em;
      font-weight: 500;
    }

    .filter-tag:hover {
      background: var(--link-color);
      color: white;
      border-color: var(--link-color);
      transform: translateY(-2px);
    }

    .filter-tag.active {
      background: var(--link-color);
      color: white;
      border-color: var(--link-color);
    }

    /* Projects Grid */
    .projects-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
      gap: 30px;
      margin-bottom: 40px;
    }

    /* Project Card */
    .project-card {
      background: var(--bg-secondary);
      border: 1px solid var(--border-color);
      border-radius: 12px;
      overflow: hidden;
      transition: all 0.3s ease;
      cursor: pointer;
      display: flex;
      flex-direction: column;
      position: relative;
      height: 100%;
    }

    .project-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
      border-color: var(--link-color);
    }

    .project-card.featured {
      border: 2px solid var(--link-color);
    }

    .project-card.featured::before {
      content: "Featured";
      position: absolute;
      top: 15px;
      right: 15px;
      background: var(--link-color);
      color: white;
      padding: 4px 12px;
      border-radius: 15px;
      font-size: 0.75em;
      font-weight: 600;
      z-index: 1;
    }

    .card-header {
      padding: 25px;
      background: var(--bg-primary);
      border-bottom: 1px solid var(--border-color);
    }

    .card-emoji {
      font-size: 3em;
      margin-bottom: 15px;
      display: block;
    }

    .card-title {
      font-size: 1.4em;
      font-weight: 600;
      color: var(--text-primary);
      margin: 0 0 8px 0;
    }

    .card-subtitle {
      font-size: 0.95em;
      color: var(--text-secondary);
      margin: 0;
    }

    .card-body {
      padding: 20px 25px;
      flex: 1;
      display: flex;
      flex-direction: column;
    }

    .card-description {
      color: var(--text-primary);
      line-height: 1.6;
      margin-bottom: 20px;
      flex: 1;
    }

    .card-technologies {
      display: flex;
      flex-wrap: wrap;
      gap: 8px;
      margin-bottom: 20px;
    }

    .tech-badge {
      background: rgba(var(--link-color-rgb, 0, 102, 204), 0.1);
      color: var(--link-color);
      padding: 4px 10px;
      border-radius: 12px;
      font-size: 0.8em;
      font-weight: 500;
      border: 1px solid rgba(var(--link-color-rgb, 0, 102, 204), 0.2);
    }

    .card-footer {
      padding: 0 25px 20px;
      display: flex;
      gap: 12px;
    }

    .card-link {
      flex: 1;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      gap: 6px;
      padding: 10px 16px;
      background: var(--link-color);
      color: white;
      text-decoration: none;
      border-radius: 8px;
      font-weight: 500;
      font-size: 0.9em;
      transition: all 0.2s ease;
    }

    .card-link:hover {
      background: var(--link-hover);
      transform: translateY(-1px);
    }

    .card-link.secondary {
      background: transparent;
      color: var(--link-color);
      border: 1px solid var(--link-color);
    }

    .card-link.secondary:hover {
      background: var(--link-color);
      color: white;
    }

    .card-link svg {
      width: 16px;
      height: 16px;
    }

    /* No projects state */
    .no-projects {
      text-align: center;
      padding: 80px 20px;
    }

    .no-projects-icon {
      font-size: 5em;
      display: block;
      margin-bottom: 20px;
      opacity: 0.5;
    }

    .no-projects p {
      font-size: 1.2em;
      color: var(--text-primary);
      opacity: 0.7;
    }

    /* Loading skeleton */
    .skeleton-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
      gap: 30px;
    }

    .skeleton-card {
      background: var(--bg-secondary);
      border: 1px solid var(--border-color);
      border-radius: 12px;
      height: 400px;
      animation: pulse 1.5s ease-in-out infinite;
    }

    @keyframes pulse {
      0%, 100% {
        opacity: 1;
      }
      50% {
        opacity: 0.5;
      }
    }

    /* Mobile responsiveness */
    @media (max-width: 768px) {
      #projects-page {
        padding: 20px 15px;
      }

      .page-header h1 {
        font-size: 2em;
      }

      .projects-grid {
        grid-template-columns: 1fr;
        gap: 20px;
      }

      .filter-tags {
        padding: 0 10px;
      }

      .card-header {
        padding: 20px;
      }

      .card-emoji {
        font-size: 2.5em;
      }

      .card-footer {
        flex-direction: column;
      }
    }

    /* Theme-specific adjustments */
    [data-theme="dark"] .project-card {
      background: var(--bg-secondary);
    }

    [data-theme="dark"] .project-card:hover {
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
    }

    [data-theme="glass"] .project-card {
      background: rgba(255, 255, 255, 0.7);
      backdrop-filter: blur(10px);
    }

    [data-theme="glass"] .project-card:hover {
      background: rgba(255, 255, 255, 0.9);
    }
  </style>

  <div id="projects-page">
    <div class="page-header">
      <h1>My Projects</h1>
      <p class="page-subtitle">Explore my work and side projects</p>
    </div>

    <!-- Filter tags (for future implementation) -->
    <div class="filter-tags" style="display: none;">
      <button class="filter-tag active" data-filter="all">All</button>
      <button class="filter-tag" data-filter="web">Web Apps</button>
      <button class="filter-tag" data-filter="mobile">Mobile</button>
      <button class="filter-tag" data-filter="ai">AI/ML</button>
      <button class="filter-tag" data-filter="tools">Tools</button>
    </div>

    {displayProjects.length > 0 ? (
      <div class="projects-grid">
        {displayProjects.map((project) => (
          <article class={`project-card ${project.featured ? 'featured' : ''}`} 
                   data-project-id={project.id || project.slug}
                   data-project-url={project.url || '#'}>
            <div class="card-header">
              <span class="card-emoji">{project.emoji || '🚀'}</span>
              <h3 class="card-title">{project.title}</h3>
              {project.subtitle && <p class="card-subtitle">{project.subtitle}</p>}
            </div>
            
            <div class="card-body">
              <p class="card-description">
                {project.description || 'No description available'}
              </p>
              
              {project.technologies && (
                <div class="card-technologies">
                  {(Array.isArray(project.technologies) ? project.technologies : project.technologies.split(',')).map(tech => (
                    <span class="tech-badge">{tech.trim()}</span>
                  ))}
                </div>
              )}
            </div>

            <div class="card-footer">
              {(project.github || project.github_link) && (
                <a href={project.github || project.github_link} 
                   target="_blank" 
                   rel="noopener noreferrer" 
                   class="card-link secondary"
                   onclick="event.stopPropagation();">
                  <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                  </svg>
                  Code
                </a>
              )}
              {(project.live || project.live_link) && (
                <a href={project.live || project.live_link} 
                   target="_blank" 
                   rel="noopener noreferrer" 
                   class="card-link"
                   onclick="event.stopPropagation();">
                  <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3m-2 16H5V5h7V3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7h-2v7z"/>
                  </svg>
                  Live Demo
                </a>
              )}
              {!project.github && !project.github_link && !project.live && !project.live_link && (
                <button class="card-link">
                  View Details →
                </button>
              )}
            </div>
          </article>
        ))}
      </div>
    ) : (
      <div class="no-projects">
        <span class="no-projects-icon">📁</span>
        <p>No projects available at the moment.</p>
      </div>
    )}
  </div>

  <script>
    // Handle project card clicks
    document.addEventListener('DOMContentLoaded', function() {
      const projectCards = document.querySelectorAll('.project-card');
      
      projectCards.forEach(card => {
        card.addEventListener('click', function(e) {
          // Don't navigate if clicking on a link
          if (e.target.closest('a')) {
            return;
          }
          
          const projectUrl = this.dataset.projectUrl;
          if (projectUrl && projectUrl !== '#') {
            // For now, just show an alert since we don't have individual pages yet
            // In the future, this will navigate to the project detail page
            console.log('Navigate to:', projectUrl);
            // window.location.href = projectUrl;
          }
        });
      });

      // Add hover effect for cards
      projectCards.forEach(card => {
        card.addEventListener('mouseenter', function() {
          this.style.transform = 'translateY(-5px)';
        });
        
        card.addEventListener('mouseleave', function() {
          this.style.transform = 'translateY(0)';
        });
      });

      // Future: Implement filtering
      const filterTags = document.querySelectorAll('.filter-tag');
      filterTags.forEach(tag => {
        tag.addEventListener('click', function() {
          // Remove active class from all tags
          filterTags.forEach(t => t.classList.remove('active'));
          // Add active class to clicked tag
          this.classList.add('active');
          
          const filter = this.dataset.filter;
          console.log('Filter by:', filter);
          // Implement filtering logic here
        });
      });
    });
  </script>
</BaseLayout>