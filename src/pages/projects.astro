---
import BaseLayout from '../layouts/BaseLayout.astro';
import CardModal from '../components/CardModal.astro';
import db from '../lib/db.js';

// Fetch projects
let projects = [];
try {
  const stmt = db.prepare('SELECT * FROM projects WHERE is_active = 1 ORDER BY display_order, id DESC');
  projects = stmt.all();
} catch (err) {
  console.error('Error fetching projects:', err);
}
---

<BaseLayout title="Projects - Nadav Moskow">
  <link rel="stylesheet" href="/css/unified-cards.css">
  
  <div id="projects-page">
    <div class="page-header">
      <h1>My Projects</h1>
      <p class="page-subtitle">Click on any project to explore in detail</p>
    </div>
    
    <div class="card-grid">
      {projects.map((project) => (
        <div class="card-item" data-card-type="project" data-card-id={project.id}>
          <div class="card-inner">
            <span class="card-emoji">{project.emoji || 'ðŸš€'}</span>
            <h3 class="card-title">{project.title}</h3>
            {project.subtitle && <p class="card-subtitle">{project.subtitle}</p>}
          </div>
          <div class="card-hover-overlay">
            <span class="hover-text">View Project â†’</span>
          </div>
        </div>
      ))}
    </div>
  </div>
  
  <CardModal />
  
  <script define:vars={{ projects }}>
    // Handle card clicks for projects
    document.querySelectorAll('[data-card-type="project"]').forEach(card => {
      card.addEventListener('click', function() {
        const projectId = this.getAttribute('data-card-id');
        const project = projects.find(p => p.id == projectId);
        
        if (project && window.unifiedModal) {
          // Build the modal content
          let content = `
            <div class="modal-section">
              <h3>Overview</h3>
              <p>${project.description || 'No description available'}</p>
            </div>
          `;
          
          if (project.technologies) {
            content += `
              <div class="modal-section">
                <h3>Technologies</h3>
                <div class="tech-tags">
                  ${project.technologies.split(',').map(tech => 
                    `<span class="tech-tag">${tech.trim()}</span>`
                  ).join('')}
                </div>
              </div>
            `;
          }
          
          if (project.github_link || project.live_link) {
            content += `
              <div class="modal-section">
                <div class="project-links">
                  ${project.github_link ? `<a href="${project.github_link}" target="_blank" class="project-link">GitHub</a>` : ''}
                  ${project.live_link ? `<a href="${project.live_link}" target="_blank" class="project-link">Live Demo</a>` : ''}
                </div>
              </div>
            `;
          }
          
          window.unifiedModal.open({
            icon: project.emoji || 'ðŸš€',
            title: project.title,
            subtitle: project.subtitle,
            content: content
          });
        }
      });
    });
  </script>
  
  <style>
    #projects-page {
      padding: 80px 20px 40px;
      min-height: calc(100vh - 120px);
    }
    
    .page-header {
      text-align: center;
      margin-bottom: 40px;
    }
    
    .page-header h1 {
      font-size: 3em;
      margin-bottom: 10px;
    }
    
    .page-subtitle {
      font-size: 1.2em;
      opacity: 0.8;
    }
    
    .modal-section {
      margin-bottom: 30px;
    }
    
    .modal-section h3 {
      margin-bottom: 15px;
      color: var(--text-primary);
    }
    
    .tech-tags {
      display: flex;
      flex-wrap: wrap;
      gap: 10px;
    }
    
    .tech-tag {
      background: var(--link-color);
      color: white;
      padding: 6px 16px;
      border-radius: 20px;
      font-size: 0.9em;
    }
    
    .project-links {
      display: flex;
      gap: 15px;
    }
    
    .project-link {
      display: inline-block;
      padding: 10px 24px;
      background: var(--link-color);
      color: white;
      text-decoration: none;
      border-radius: 8px;
      transition: all 0.2s ease;
    }
    
    .project-link:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }
  </style>
</BaseLayout>